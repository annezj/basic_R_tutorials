df1<-fread(paste("/Users/annejones/Documents/blog/datasets/crime/2016-12-merseyside-street.csv",sep=''), data.table=F)
}else
{
monthstr=paste(year,sprintf("%02i",month),sep='-')
print(monthstr)
for(location in c("merseyside"))
{
df1<-fread(paste("/Users/annejones/Documents/blog/datasets/crime/crimedata/",monthstr,"/",
monthstr,"-",location,"-street.csv",sep=''), data.table=F)
df=rbind(df,df1)
}
}
}
}
rm(df1)
# clean up data and save
df.save=df[,c(2,5,6,10)]
write.csv(df.save, file="/Users/annejones/Documents/blog/datasets/crime/crimedata/Merseyside-01-2016-12-2016.csv", row.names = F)
df.crime=df.save
# zoom and trim, then save again
xlim=c(-3.05, -2.84)
ylim=c(53.32,53.50)
df.trim=df.crime[which((df.crime$Latitude>=ylim[1])&(df.crime$Latitude<=ylim[2])&
(df.crime$Longitude>=xlim[1])&(df.crime$Longitude<=xlim[2])),]
write.csv(df.trim, file="/Users/annejones/Documents/blog/blog_r_scripts/basic_R_tutorials/data/Liverpool-01-2016-12-2016.csv", row.names = F)
df=df.trim
rm(df.trim)
rm(df.save)
colnames(df)=c("date","x","y", "type")
df$month=as.integer(substr(df$date, 6, 7))
ggplot(df)+geom_bar(aes(x=month, fill=type), position="stack")+theme_bw()+scale_x_continuous(breaks=1:12)
rm(list=ls())
library(animation)
library(ggplot2)
library(ggmap)
# Read the data: Crimes in the Liverpool area during 2016
# (Contains public sector information licensed under the Open Government Licence v3.0)
# Data for Merseyside Police, January to December 2016 obtained from https://data.police.uk/
# Grab my edit for Liverpool area and with extraneous columns removed:
df=read.csv("https://github.com/annezj/basic_R_tutorials/raw/master/data/Liverpool-01-2016-12-2016.csv")
rm(list=ls())
library(animation)
library(ggplot2)
library(ggmap)
# Read the data: Crimes in the Liverpool area during 2016
# (Contains public sector information licensed under the Open Government Licence v3.0)
# Data for Merseyside Police, January to December 2016 obtained from https://data.police.uk/
# Grab my edit for Liverpool area and with extraneous columns removed:
df=read.csv("https://github.com/annezj/basic_R_tutorials/raw/master/data/Liverpool-01-2016-12-2016.csv")
rm(list=ls())
library(animation)
library(ggplot2)
library(ggmap)
# Read the data: Crimes in the Liverpool area during 2016
# (Contains public sector information licensed under the Open Government Licence v3.0)
# Data for Merseyside Police, January to December 2016 obtained from https://data.police.uk/
# Grab my edit for Liverpool area and with extraneous columns removed:
df=read.csv("https://github.com/annezj/basic_R_tutorials/raw/master/data/Liverpool-01-2016-12-2016.csv")
df=read.csv("/Users/annejones/Documents/blog/blog_r_scripts/basic_R_tutorials/data/Liverpool-01-2016-12-2016.csv")
df=read.csv("https://github.com/annezj/basic_R_tutorials/raw/master/data/Liverpool-01-2016-12-2016.csv")
latmin=min(df$Latitude)
latmax=max(df$Latitude)
lonmin=min(df$Longitude)
lonmax=max(df$Longitude)
mymap<-get_map(location=c(lonmin,latmin,lonmax,latmax+0.5))
df$monthnum=as.integer(substr(df$Month, 6, 7))
View(df)
ggplot(df)+geom_bar(aes(x=monthnum, fill=type), position="stack")+theme_bw()+scale_x_continuous(breaks=1:12)
ggplot(df)+geom_bar(aes(x=monthnum, fill=Crime.type), position="stack")+theme_bw()+scale_x_continuous(breaks=1:12)
getwd()
mymap<-get_map(location=c(lonmin,latmin,lonmax,latmax+0.5))
library(animation)
library(ggplot2)
library(ggmap)
install.packages("animation")
install.packages("ggmap")
library(animation)
library(ggplot2)
library(ggmap)
mymap<-get_map(location=c(lonmin,latmin,lonmax,latmax+0.5))
nframes=12
iframe=1
dfi=df[which(df$monthnum==iframe),]
titlestr=paste('Month = ',yday,sep='')
titlestr=paste('Month = ',monthnum,sep='')
titlestr=paste('Month = ',iframe,sep='')
df$monthname=as.factor(df$monthnum, labels=c("January", "February", "March", "April", "May", "June", "July", "August", "September",
"October", "November", "December"))
df$monthname=as.factor(df$monthnum, levels=1:12,labels=c("January", "February", "March", "April", "May", "June", "July", "August", "September",
"October", "November", "December"))
help(as.factor)
df$monthname=factor(df$monthnum, levels=1:12,labels=c("January", "February", "March", "April", "May", "June", "July", "August", "September",
"October", "November", "December"))
View(df)
monthstrings=c("January", "February", "March", "April", "May", "June", "July", "August", "September",
"October", "November", "December")
df$monthname=factor(df$monthnum, levels=1:12,labels=monthstrings)
titlestr=paste('Month = ',monthstrings[iframe],sep='')
titlestr=paste(monthstrings[iframe],'\n',2016,sep='')
p=ggmap(mymap)+ggtitle(titlestr)
p
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.5, size=4)+
scale_color_discrete("", drop=F)+xlab("")+ylab("")
p
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.5, size=4)+
scale_color_discrete("", drop=F)+xlab("")+ylab("")+
theme(plot.title = element_text(hjust = 0.5))
p
lonmin
lonmax
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type))+
scale_color_discrete("", drop=F)+xlab("")+ylab("")+
theme(plot.title = element_text(hjust = 0.5))
print(p)
dfi
ggplot(dfi)+geom_point(aes(x=Longitude,y=Latitude,color=Crime.type))
latmin
latmax
mymap
p
mymap<-get_map(location=c(lonmin,latmin,lonmax,latmax+0.5))
mymap<-get_map(location=c(lonmin,latmin,lonmax,latmax))
p=ggmap(mymap)+ggtitle(titlestr)
p
p=ggmap(mymap)+ggtitle(titlestr)+theme(plot.title = element_text(hjust = 0.5))
p
dfi=df[which(df$monthnum==iframe),]
# Print the base map and title
titlestr=paste(monthstrings[iframe],'\n',2016,sep='')
p=ggmap(mymap)+ggtitle(titlestr)+theme(plot.title = element_text(hjust = 0.5))
# Plot all crimes for this frame
# fix the color scale across all frames so no categories are dropped
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type))+
scale_color_discrete("", drop=F)+xlab("")+ylab("")
print(p)
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.5)+
scale_color_discrete("", drop=F)+xlab("")+ylab("")
print(p)
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.1)+
scale_color_discrete("", drop=F)+xlab("")+ylab("")
print(p)
p=ggmap(mymap)+ggtitle(titlestr)+theme(plot.title = element_text(hjust = 0.5))
# Plot all crimes for this frame
# fix the color scale across all frames so no categories are dropped
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.1)+
scale_color_discrete("", drop=F)+xlab("")+ylab("")
print(p)
p=ggmap(mymap)+ggtitle(titlestr)+theme(plot.title = element_text(hjust = 0.5))
# Plot all crimes for this frame
# fix the color scale across all frames so no categories are dropped
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.2)+
scale_color_discrete("", drop=F)+xlab("")+ylab("")
print(p)
rm(list=ls())
library(animation)
library(ggplot2)
library(ggmap)
# Read the data: Crimes in the Liverpool area during 2016
# (Contains public sector information licensed under the Open Government Licence v3.0)
# Data for Merseyside Police, January to December 2016 obtained from https://data.police.uk/
# Grab my edit for Liverpool area and with extraneous columns removed:
df=read.csv("/Users/annejones/Documents/blog/blog_r_scripts/basic_R_tutorials/data/Liverpool-01-2016-12-2016.csv")
# Get googlemaps background for the dataset location
latmin=min(df$Latitude)
latmax=max(df$Latitude)
lonmin=min(df$Longitude)
lonmax=max(df$Longitude)
mymap<-get_map(location=c(lonmin,latmin,lonmax,latmax))
# Process the date string
df$monthnum=as.integer(substr(df$Month, 6, 7))
monthstrings=c("January", "February", "March", "April", "May", "June", "July", "August", "September",
"October", "November", "December")
df$monthname=factor(df$monthnum, levels=1:12,labels=monthstrings)
# Quick plot to check
ggplot(df)+geom_bar(aes(x=monthnum, fill=Crime.type), position="stack")+theme_bw()+scale_x_continuous(breaks=1:12)
# Create an animation with one frame per month
nframes=12
# Define plotting function which must must create one plot per frame
create.plots <-function()
{
# Set an frame rate of 1 per 2 seconds
ani.options(interval=2, verbose=FALSE)
# animvec is used to loop over frames
animvec=1:nframes
# loop over months/frames
for(iframe in animvec)
{
# Pick up crimes occurring this month
dfi=df[which(df$monthnum==iframe),]
# Print the base map and title
titlestr=paste(monthstrings[iframe],'\n',2016,sep='')
p=ggmap(mymap)+ggtitle(titlestr)+theme(plot.title = element_text(hjust = 0.5))
# Plot all crimes for this frame
# fix the color scale across all frames so no categories are dropped
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.2)+
scale_color_discrete("", drop=F)+xlab("")+ylab("")
print(p)
}
}
# Animate by calling the function to create an html animation from the plotting function
# The html file will appear in the current working directory
# and open automatically in the default web brower
testdir="/Users/annejones/Documents/blog/blog_r_scripts/basic_R_tutorials/output/crime_animation/"
setwd(testdir)
saveHTML(create.plots(),
img.name="crime_animation",
autoplay=T,
outdir=getwd(),
htmlfile=paste("crime_animation.html", sep=""),
ani.height=600,ani.width=600,
title="Crime Animation",
description=c("none")
)
# Define plotting function which must must create one plot per frame
create.plots <-function()
{
# Set an frame rate of 1 per second
ani.options(interval=1, verbose=FALSE)
# animvec is used to loop over frames
animvec=1:nframes
# loop over months/frames
for(iframe in animvec)
{
# Pick up crimes occurring this month
dfi=df[which(df$monthnum==iframe),]
# Print the base map and title
titlestr=paste(monthstrings[iframe],'\n',2016,sep='')
p=ggmap(mymap)+ggtitle(titlestr)+theme(plot.title = element_text(hjust = 0.5))
# Plot all crimes for this frame
# fix the color scale across all frames so no categories are dropped
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.2)+
scale_color_discrete("", drop=F)+xlab("")+ylab("")
print(p)
}
}
# Animate by calling the function to create an html animation from the plotting function
# The html file will appear in the current working directory
# and open automatically in the default web brower
testdir="/Users/annejones/Documents/blog/blog_r_scripts/basic_R_tutorials/output/crime_animation/"
setwd(testdir)
saveHTML(create.plots(),
img.name="crime_animation",
autoplay=T,
outdir=getwd(),
htmlfile=paste("crime_animation.html", sep=""),
ani.height=600,ani.width=600,
title="Crime Animation",
description=c("none")
)
pwd
getwd()
iframe=12
dfi=df[which(df$monthnum==iframe),]
rm(list=ls())
library(data.table)
library(ggplot2)
datadir="/Users/annejones/Documents/blog/datasets/crime/"
# load data for 2016 and merseyside
df=data.frame()
month=12
df1<-fread(paste("/Users/annejones/Documents/blog/datasets/crime/2016-12-merseyside-street.csv",sep=''), data.table=F)
rm(list=ls())
library(data.table)
library(ggplot2)
datadir="/Users/annejones/Documents/blog/datasets/crime/"
# load data for 2016 and merseyside
df=data.frame()
for(year in c(2016))
{
for(month in 1:12)
{
if(month==12)
{
df1<-fread(paste("/Users/annejones/Documents/blog/datasets/crime/2016-12-merseyside-street.csv",sep=''), data.table=F)
}else
{
monthstr=paste(year,sprintf("%02i",month),sep='-')
print(monthstr)
location="merseyside"
df1<-fread(paste("/Users/annejones/Documents/blog/datasets/crime/crimedata/",monthstr,"/",
monthstr,"-",location,"-street.csv",sep=''), data.table=F)
}
df=rbind(df,df1)
}
}
rm(df1)
# clean up data and save
df.save=df[,c(2,5,6,10)]
write.csv(df.save, file="/Users/annejones/Documents/blog/datasets/crime/crimedata/Merseyside-01-2016-12-2016.csv", row.names = F)
df.crime=df.save
# zoom and trim, then save again
xlim=c(-3.05, -2.84)
ylim=c(53.32,53.50)
df.trim=df.crime[which((df.crime$Latitude>=ylim[1])&(df.crime$Latitude<=ylim[2])&
(df.crime$Longitude>=xlim[1])&(df.crime$Longitude<=xlim[2])),]
write.csv(df.trim, file="/Users/annejones/Documents/blog/blog_r_scripts/basic_R_tutorials/data/Liverpool-01-2016-12-2016.csv", row.names = F)
df=df.trim
rm(df.trim)
rm(df.save)
colnames(df)=c("date","x","y", "type")
df$month=as.integer(substr(df$date, 6, 7))
ggplot(df)+geom_bar(aes(x=month, fill=type), position="stack")+theme_bw()+scale_x_continuous(breaks=1:12)
rm(list=ls())
library(animation)
library(ggplot2)
library(ggmap)
# Read the data: Crimes in the Liverpool area during 2016
# (Contains public sector information licensed under the Open Government Licence v3.0)
# Data for Merseyside Police, January to December 2016 obtained from https://data.police.uk/
# Grab my edit for Liverpool area and with extraneous columns removed:
df=read.csv("/Users/annejones/Documents/blog/blog_r_scripts/basic_R_tutorials/data/Liverpool-01-2016-12-2016.csv")
# Get googlemaps background for the dataset location
latmin=min(df$Latitude)
latmax=max(df$Latitude)
lonmin=min(df$Longitude)
lonmax=max(df$Longitude)
mymap<-get_map(location=c(lonmin,latmin,lonmax,latmax))
# Process the date string
df$monthnum=as.integer(substr(df$Month, 6, 7))
monthstrings=c("January", "February", "March", "April", "May", "June", "July", "August", "September",
"October", "November", "December")
df$monthname=factor(df$monthnum, levels=1:12,labels=monthstrings)
# Quick plot to check
ggplot(df)+geom_bar(aes(x=monthnum, fill=Crime.type), position="stack")+theme_bw()+scale_x_continuous(breaks=1:12)
# Create an animation with one frame per month
nframes=12
# Define plotting function which must must create one plot per frame
create.plots <-function()
{
# Set an frame rate of 1 per second
ani.options(interval=1, verbose=FALSE)
# animvec is used to loop over frames
animvec=1:nframes
# loop over months/frames
for(iframe in animvec)
{
# Pick up crimes occurring this month
dfi=df[which(df$monthnum==iframe),]
# Print the base map and title
titlestr=paste(monthstrings[iframe],'\n',2016,sep='')
p=ggmap(mymap)+ggtitle(titlestr)+theme(plot.title = element_text(hjust = 0.5))
# Plot all crimes for this frame
# fix the color scale across all frames so no categories are dropped
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.2)+
scale_color_discrete("", drop=F)+xlab("")+ylab("")
print(p)
}
}
# Animate by calling the function to create an html animation from the plotting function
# The html file will appear in the current working directory
# and open automatically in the default web brower
testdir="/Users/annejones/Documents/blog/blog_r_scripts/basic_R_tutorials/output/crime_animation/"
setwd(testdir)
saveHTML(create.plots(),
img.name="crime_animation",
autoplay=T,
outdir=getwd(),
htmlfile=paste("crime_animation.html", sep=""),
ani.height=600,ani.width=600,
title="Crime Animation",
description=c("none")
)
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.2)+
scale_color_discrete("", drop=F)+xlab("")+ylab("")+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
print(p)
dfi=df[which(df$monthnum==iframe),]
# Print the base map and title
titlestr=paste(monthstrings[iframe],'\n',2016,sep='')
p=ggmap(mymap)+ggtitle(titlestr)+theme(plot.title = element_text(hjust = 0.5))
# Plot all crimes for this frame
# fix the color scale across all frames so no categories are dropped
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.2)+
scale_color_discrete("", drop=F)+xlab("")+ylab("")+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
print(p)
dfi=df[which(df$monthnum==iframe),]
iframe=12
dfi=df[which(df$monthnum==iframe),]
titlestr=paste(monthstrings[iframe],'\n',2016,sep='')
p=ggmap(mymap)+ggtitle(titlestr)+theme(plot.title = element_text(hjust = 0.5))
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.2)+
scale_color_discrete("", drop=F)+xlab("")+ylab("")+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
print(p)
p=ggmap(mymap)+ggtitle(titlestr)+theme(plot.title = element_text(hjust = 0.5))
# Plot all crimes for this frame
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.2)
# Fix the color scale across all frames so no categories are dropped
p=p+scale_color_discrete("", drop=F)+xlab("")+ylab("")
# Fix transparency on the legend
p=p+guides(colour = guide_legend(override.aes = list(alpha = 1)))
print(p)
rm(list=ls())
library(animation)
library(ggplot2)
library(ggmap)
# Read the data: Crimes in the Liverpool area during 2016
# (Contains public sector information licensed under the Open Government Licence v3.0)
# Data for Merseyside Police, January to December 2016 obtained from https://data.police.uk/
# Grab my edit for Liverpool area and with extraneous columns removed:
df=read.csv("/Users/annejones/Documents/blog/blog_r_scripts/basic_R_tutorials/data/Liverpool-01-2016-12-2016.csv")
# Get googlemaps background for the dataset location
latmin=min(df$Latitude)
latmax=max(df$Latitude)
lonmin=min(df$Longitude)
lonmax=max(df$Longitude)
mymap<-get_map(location=c(lonmin,latmin,lonmax,latmax))
# Process the date string
df$monthnum=as.integer(substr(df$Month, 6, 7))
monthstrings=c("January", "February", "March", "April", "May", "June", "July", "August", "September",
"October", "November", "December")
df$monthname=factor(df$monthnum, levels=1:12,labels=monthstrings)
# Quick plot to check
ggplot(df)+geom_bar(aes(x=monthnum, fill=Crime.type), position="stack")+theme_bw()+scale_x_continuous(breaks=1:12)
# Create an animation with one frame per month
nframes=12
# Define plotting function which must must create one plot per frame
create.plots <-function()
{
# Set an frame rate of 1 per second
ani.options(interval=1, verbose=FALSE)
# animvec is used to loop over frames
animvec=1:nframes
# loop over months/frames
for(iframe in animvec)
{
# Pick up crimes occurring this month
dfi=df[which(df$monthnum==iframe),]
# Print the base map and title
titlestr=paste(monthstrings[iframe],'\n',2016,sep='')
p=ggmap(mymap)+ggtitle(titlestr)+theme(plot.title = element_text(hjust = 0.5))
# Plot all crimes for this frame
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.2)
# Fix the color scale across all frames so no categories are dropped
p=p+scale_color_discrete("", drop=F)+xlab("")+ylab("")
# Fix transparency on the legend
p=p+guides(colour = guide_legend(override.aes = list(alpha = 1)))
print(p)
}
}
# Animate by calling the function to create an html animation from the plotting function
# The html file will appear in the current working directory
# and open automatically in the default web brower
testdir="/Users/annejones/Documents/blog/blog_r_scripts/basic_R_tutorials/output/crime_animation/"
setwd(testdir)
saveHTML(create.plots(),
img.name="crime_animation",
autoplay=T,
outdir=getwd(),
htmlfile=paste("crime_animation.html", sep=""),
ani.height=1000,ani.width=1000,
title="Crime Animation",
description=c("none")
)
testdir="/Users/annejones/Documents/blog/blog_r_scripts/basic_R_tutorials/output/crime_animation/"
setwd(testdir)
saveHTML(create.plots(),
img.name="crime_animation",
autoplay=T,
outdir=getwd(),
htmlfile=paste("crime_animation.html", sep=""),
ani.height=800,ani.width=1000,
title="Crime Animation",
description=c("none")
)
saveHTML(create.plots(),
img.name="crime_animation",
autoplay=T,
outdir=getwd(),
htmlfile=paste("crime_animation.html", sep=""),
ani.height=800,ani.width=800,
title="Crime Animation",
description=c("none")
)
create.plots <-function()
{
# Set an frame rate of 1 per second
ani.options(interval=1, verbose=FALSE)
# animvec is used to loop over frames
animvec=1:nframes
# loop over months/frames
for(iframe in animvec)
{
# Pick up crimes occurring this month
dfi=df[which(df$monthnum==iframe),]
# Print the base map and title
titlestr=paste(monthstrings[iframe],'\n',2016,sep='')
p=ggmap(mymap)+ggtitle(titlestr)+theme(plot.title = element_text(hjust = 0.5))
# Plot all crimes for this frame
p=p+geom_point(data=dfi,aes(x=Longitude,y=Latitude,color=Crime.type), alpha=0.4)
# Fix the color scale across all frames so no categories are dropped
p=p+scale_color_discrete("", drop=F)+xlab("")+ylab("")
# Fix transparency on the legend
p=p+guides(colour = guide_legend(override.aes = list(alpha = 1)))
print(p)
}
}
# Animate by calling the function to create an html animation from the plotting function
# The html file will appear in the current working directory
# and open automatically in the default web brower
testdir="/Users/annejones/Documents/blog/blog_r_scripts/basic_R_tutorials/output/crime_animation/"
setwd(testdir)
saveHTML(create.plots(),
img.name="crime_animation",
autoplay=T,
outdir=getwd(),
htmlfile=paste("crime_animation.html", sep=""),
ani.height=800,ani.width=800,
title="Crime Animation",
description=c("none")
)
